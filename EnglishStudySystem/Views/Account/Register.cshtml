@model EnglishStudySystem.Models.RegisterViewModel
@{
    ViewBag.Title = "Đăng ký";
}

<head>
    <link href="~/Content/CSS/RegisterStyle.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<div class="register-form-wrapper">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <h2>@ViewBag.Title</h2>
    @if (TempData["ConfirmSuccess"] != null && (bool)TempData["ConfirmSuccess"])
    {
        <script>
        document.addEventListener("DOMContentLoaded", function () {
            Swal.fire({
                title: 'Thành công!',
                text: 'Tài khoản của bạn đã được xác nhận thành công.',
                icon: 'success',
                confirmButtonText: 'Đăng nhập ngay',
                allowOutsideClick: false,
                allowEscapeKey: false
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("Login", "Account")';
                }
            });
        });
        </script>
    }
    @* Hiển thị thông báo nếu có *@
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-info" style="margin-top: 10px;">
            @Html.Raw(ViewBag.Message)
        </div>
    }

    @* Chỉ hiển thị form nếu chưa đăng ký thành công *@
    @if (ViewBag.Message == null)
    {
        using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @*@Html.ValidationSummary("", new { @class = "text-danger" })*@

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", placeholder = "Tên đăng nhập" })
                </div>
                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Địa chỉ Email" })
                </div>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-signature"></i></span>
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Họ và tên đầy đủ" })
                </div>
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-calendar-alt"></i></span>
                    @Html.EditorFor(m => m.DateOfBirth, new { htmlAttributes = new { @class = "form-control", placeholder = "Ngày/tháng/năm" } })
                </div>
                @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Số điện thoại" })
                </div>
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-lock"></i></span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Mật khẩu" })
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Xác nhận mật khẩu" })
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-submit">
                <input type="submit" value="Đăng ký" class="btn btn-submit" />
            </div>
        }
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
