@model EnglishStudySystem.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Đặt lại mật khẩu";
}

<head>
    <link href="~/Content/CSS2/ResetPasswordStyle.css" rel="stylesheet" />
    <link href="~/Content/CSS/RegisterStyle.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<main aria-labelledby="title" class="reset-password-wrapper">
    <h2 id="title">@ViewBag.Title.</h2>

    @if (ViewBag.ResetPasswordSuccess != null && (bool)ViewBag.ResetPasswordSuccess)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    title: 'Thành công!',
                    text: 'Mật khẩu của bạn đã được đặt lại thành công.',
                    icon: 'success',
                    confirmButtonText: 'Xác nhận và Đăng nhập',
                    allowOutsideClick: false,
                    allowEscapeKey: false
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("Login", "Account")';
                    }
                });
            });
        </script>
    }
    else
    {
        using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger mb-3" })
            @Html.HiddenFor(model => model.Code)

            <div class="row mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mb-3">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="offset-md-2 col-md-10">
                    <input type="submit" class="btn btn-outline-dark" value="Đặt lại mật khẩu" />
                </div>
            </div>
        }
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
