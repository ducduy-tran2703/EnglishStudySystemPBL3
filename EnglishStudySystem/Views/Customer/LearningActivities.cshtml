*@{
    ViewBag.Title = "Hoạt động học tập";
    Layout = "~/Views/Shared/LayoutCustomer.cshtml";
}

<link rel="stylesheet" href="~/Content/CSS/LearningActivities.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">


@* Nội dung chính của View - Đặt trong container-content *@
<div class="container-content">
    <h1>Hoạt động học tập</h1>
    <hr>
    <div class="card-container">
        @* Cập nhật data-url với đường dẫn thực tế đến Action Controller của bạn *@
        <div class="card all" data-url="@Url.Action("GetBoughtCoursesStats", "Customer")">
            @* Ví dụ: Gọi Action GetBoughtCoursesStats trong Controller LearningActivity *@
            <div class="icon">
                <i class="bi bi-book" aria-label="Khóa học đã mua"></i>
            </div>
            <div class="text">Khóa học đã mua</div>
            <div class="number">@ViewBag.BoughtCoursesCount</div>
        </div>

        <div class="card completed" data-url="@Url.Action("GetLessonsHistoryStats","Customer")">
            @* Ví dụ *@
            <div class="icon">
                <i class="bi bi-list-check" aria-label="Lịch sử bài học"></i>   
            </div>
            <div class="text">Lịch sử bài học</div>
            <div class="number">@ViewBag.ViewedLessonsCount</div>
        </div>

        <div class="card in-progress" data-url="@Url.Action("GetFavoriteLessonsStats", "Customer")">
            @* Ví dụ *@
            <div class="icon">
                <i class="bi bi-heart" aria-label="Bài học yêu thích"></i>
            </div>
            <div class="text">Bài học yêu thích</div>
            <div class="number">@ViewBag.FavoriteLessonsCount</div>
        </div>

        <div class="card failed" data-url="@Url.Action("GetTestHistoryStats", "Customer")">
            @* Ví dụ *@
            <div class="icon">
                <i class="bi bi-journal-text" aria-label="Lịch sử bài kiểm tra"></i>
            </div>
            <div class="text">Lịch sử bài kiểm tra</div>
            <div class="number">@ViewBag.TakenTestsCount</div>
        </div>
    </div>

    @* Khu vực hiển thị thống kê - Nội dung Partial View sẽ được tải và chèn vào đây *@
    <div class="statistics-section">
        <div id="loading-indicator" style="display: none; text-align: center; padding: 20px;">
            Đang tải...
        </div>
        @* Partial View sẽ được tải và hiển thị ở đây *@
    </div>

</div>

@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cards = document.querySelectorAll('.card');
            const statisticsSection = document.querySelector('.statistics-section');
            const loadingIndicator = document.getElementById('loading-indicator');

            // Khóa lưu trong localStorage
            const STORAGE_KEY = 'selectedStatsUrl';

            async function loadStatsContent(url) {
                statisticsSection.innerHTML = '';
                loadingIndicator.style.display = 'block';

                try {
                    const response = await fetch(url);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    const html = await response.text();
                    statisticsSection.innerHTML = html;

                    // Lưu URL đang hiển thị vào localStorage
                    localStorage.setItem(STORAGE_KEY, url);
                } catch (error) {
                    console.error("Lỗi khi tải thống kê:", error);
                    statisticsSection.innerHTML = '<p style="color: red; text-align: center;">Không thể tải dữ liệu thống kê.</p>';
                } finally {
                    loadingIndicator.style.display = 'none';
                }
            }

            function removeActiveClass() {
                cards.forEach(card => card.classList.remove('active'));
            }

            cards.forEach(card => {
                card.addEventListener('click', function () {
                    const targetUrl = this.dataset.url;

                    if (targetUrl && !this.classList.contains('active')) {
                        removeActiveClass();
                        this.classList.add('active');
                        loadStatsContent(targetUrl);
                    }
                });
            });

            // Khi tải lại trang, lấy URL từ localStorage nếu có
            const savedUrl = localStorage.getItem(STORAGE_KEY);
            if (savedUrl) {
                const savedCard = Array.from(cards).find(card => card.dataset.url === savedUrl);
                if (savedCard) {
                    savedCard.classList.add('active');
                    loadStatsContent(savedUrl);
                } else {
                    // Nếu không tìm thấy card tương ứng thì dùng mặc định
                    const defaultCard = document.querySelector('.card.all');
                    if (defaultCard) {
                        defaultCard.classList.add('active');
                        loadStatsContent(defaultCard.dataset.url);
                    }
                }
            } else {
                // Không có dữ liệu lưu, dùng mặc định
                const defaultCard = document.querySelector('.card.all');
                if (defaultCard) {
                    defaultCard.classList.add('active');
                    loadStatsContent(defaultCard.dataset.url);
                }
            }
        });

    </script>
}