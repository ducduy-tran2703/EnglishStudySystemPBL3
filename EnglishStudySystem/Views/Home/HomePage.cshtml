@model IEnumerable<EnglishStudySystem.Models.Category>
@{
    ViewBag.Title = "Trang chủ - English Study";
}
<main class="container py-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold mb-0">Bạn Muốn Gì Hôm Nay</h2>
        <div class="dropdown">
            <button class="btn btn-outline-success dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown">
                <i class="fas fa-sort me-1"></i> Sắp xếp
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="@Url.Action("HomePage", "Home", new { sortOrder = "newest" })">Mới nhất</a></li>
                <li><a class="dropdown-item" href="@Url.Action("HomePage", "Home", new { sortOrder = "oldest" })">Cũ nhất</a></li>
                <li><a class="dropdown-item" href="@Url.Action("HomePage", "Home", new { sortOrder = "name" })">A-Z</a></li>
            </ul>
        </div>
    </div>

    <!-- Categories Grid -->
    <div class="row g-4">
        @foreach (var category in Model)
        {
            <div class="col-md-6 col-lg-4">
                <div class="card h-100 border-0 shadow-sm d-flex flex-column">
                    <!-- Card Body -->
                    <div class="card-body d-flex flex-column">
                        <!-- Phần header với title và giá -->
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="flex-grow-1">
                                <h3 class="h5 fw-bold mb-1 card-title-fixed">@category.Name</h3>
                            </div>
                            <span class="badge bg-warning bg-opacity-10 text-warning py-2 px-3 ms-2">
                                @if (category.Price.HasValue && category.Price > 0)
                                {
                                    
                                    <text>@string.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", category.Price.Value)</text>
                                }
                                else
                                {
                                    @:Miễn phí
                                }
                            </span>
                        </div>

                        <!-- Phần mô tả với chiều cao cố định -->
                        <div class="card-description-container mb-3">
                            @if (!string.IsNullOrEmpty(category.Description))
                            {
                                <p class="text-muted small mb-0">@category.Description</p>
                            }
                        </div>

                        <!-- Hiển thị Tổng hợp và số lượng bài học, bài kiểm tra -->
                        <div>
                            <!-- Badge Tổng hợp nằm phía trên -->
                            <div>
                                <span class="badge bg-success bg-opacity-10 text-success py-1 px-2 larger-text">
                                    <i class="fas fa-layer-group me-1"></i> Tổng hợp
                                </span>
                            </div>
                            <!-- Số lượng bài học và bài kiểm tra -->
                            <div>
                                <span class="badge bg-primary bg-opacity-10 text-primary py-1 px-2 me-2">
                                    <i class="fas fa-book me-1"></i> @category.Lessons.Count() bài học
                                </span>
                                <span class="badge bg-info bg-opacity-10 text-info py-1 px-2">
                                    <i class="fas fa-clipboard-check me-1"></i>
                                    @(category.Lessons.Sum(l => l.Tests.Count)) bài kiểm tra
                                </span>
                            </div>
                        </div>

                        <!-- Phần User info và nút - luôn ở dưới cùng -->
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="d-flex align-items-center">
                                <div class="avatar-sm bg-success bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center me-2">
                                    <i class="fas fa-user text-success"></i>
                                </div>
                                <div class="fw-semibold">
                                    @{
                                        var userNames = ViewBag.UserNames as Dictionary<string, string>;
                                         var userName = (userNames != null && !string.IsNullOrEmpty(category.CreatedByUserId)) && userNames.ContainsKey(category.CreatedByUserId)
                                            ? userNames[category.CreatedByUserId]
                                            : "System";
                                    }
                                    @userName
                                </div>
                            </div>
                            <a href="@Url.Action("Details", "Category", new { id = category.Id })"
                               class="btn btn-sm btn-success px-3">
                                Xem chi tiết
                            </a>
                        </div>
                    </div>

                    <!-- Card Footer -->
                    <div class="card-footer bg-transparent border-top py-2">
                        <small class="text-success">
                            <i class="far fa-clock me-1"></i>
                            @category.CreatedDate.ToString("dd/MM/yyyy")
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
</main>

<style>
    /* Hiệu ứng hover cho card */
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(40, 167, 69, 0.1) !important;
        }

    .badge.bg-warning {
        color: #ffc107 !important;
        background-color: rgba(255, 193, 7, 0.1) !important;
        border: 1px solid rgba(255, 193, 7, 0.2);
    }

    .badge.bg-primary {
        color: #007bff !important;
        background-color: rgba(0, 123, 255, 0.1) !important;
        border: 1px solid rgba(0, 123, 255, 0.2);
    }

    .badge.bg-info {
        color: #17a2b8 !important;
        background-color: rgba(23, 162, 184, 0.1) !important;
        border: 1px solid rgba(23, 162, 184, 0.2);
    }

    .card {
        min-height: 280px; /* Chiều cao tối thiểu cho card */
    }

    .avatar-sm {
        width: 32px;
        height: 32px;
        font-size: 12px;
    }

    .card-title-fixed {
        min-height: 48px; /* Đủ chỗ cho 2 dòng title */
        line-height: 1.2;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    /* Cố định chiều cao cho phần mô tả */
    .card-description-container {
        min-height: 20px; /* Đủ chỗ cho 2 dòng mô tả */
    }

        .card-description-container p {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            line-height: 1.4;
        }

    .larger-text {
        font-size: 1em;
    }

        .larger-text i {
            font-size: 0.6em;
        }

    .mb-3 > div + div {
        margin-top: 0 !important;
    }
</style>