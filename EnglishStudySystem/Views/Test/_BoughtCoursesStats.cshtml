@model IEnumerable<EnglishStudySystem.Models.Category>
@{
}

<main class="container py-4">
    <!-- Header Section -->
    <div class="d-flex flex-column align-items-center mb-4">
        <h2 class="fw-bold mb-3 text-center">Khóa học của bạn</h2>
        <div class="dropdown">
            <button class="btn btn-outline-success dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown">
                <i class="fas fa-sort me-1"></i> Sắp xếp
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" data-sort="newest">Mới nhất</a></li>
                <li><a class="dropdown-item" href="#" data-sort="oldest">Cũ nhất</a></li>
                <li><a class="dropdown-item" href="#" data-sort="name">A-Z</a></li>
            </ul>
        </div>
    </div>

    <!-- Courses Grid -->
    <div class="row g-4">
        @foreach (var category in Model)
        {
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card h-100 border-0 shadow-sm course-card">
                    <div class="card-body d-flex flex-column">
                        <div class="mb-3">
                            <h3 class="h5 fw-bold mb-2 text-truncate">@category.Name</h3>
                            @if (!string.IsNullOrEmpty(category.Description))
                            {
                                <p class="text-muted small mb-3 line-clamp-2">@category.Description</p>
                            }
                        </div>

                        <div class="mt-auto">
                            <div class="d-flex flex-wrap gap-2 mb-3">
                                <span class="badge bg-success bg-opacity-10 text-success py-1 px-2">
                                    <i class="fas @GetCategoryIcon(category.Name) me-1"></i>
                                    @GetCategoryTag(category.Name)
                                </span>
                            </div>

                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="avatar-sm bg-success bg-opacity-10 rounded-circle d-flex align-items-center justify-content-center">
                                        <i class="fas fa-user text-success"></i>
                                    </div>
                                    <div class="fw-semibold ms-2 small">
                                        @{
                                            var userNames = ViewBag.UserNames as Dictionary<string, string>;
                                            var userName = userNames != null && userNames.ContainsKey(category.CreatedByUserId)
                                                ? userNames[category.CreatedByUserId]
                                                : "System";
                                        }
                                        @userName - @(category.CreatedByUserRole ?? "Admin")
                                    </div>
                                </div>
                                <a href="@Url.Action("Details", "Category", new { id = category.Id })"
                                   class="btn btn-sm btn-success px-3">
                                    Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-top py-2">
                        <small class="text-success">
                            <i class="far fa-clock me-1"></i>
                            @category.CreatedDate.ToString("dd/MM/yyyy")
                        </small>
                    </div>
                </div>
            </div>
        }
    </div>
</main>

<style>
    /* Base Card Styles */
    .course-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        min-height: 280px;
    }

        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(40, 167, 69, 0.15) !important;
        }

    /* Text Limitation */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .course-card {
            min-height: auto;
        }

        .btn-success {
            padding: 0.25rem 0.75rem;
            font-size: 0.8rem;
        }

        .card-body {
            padding: 1rem;
        }
    }
</style>

@functions {
    public string GetCategoryIcon(string categoryName)
    {
        if (categoryName.Contains("Giao tiếp")) return "fa-comments";
        if (categoryName.Contains("Ngữ pháp")) return "fa-pen-fancy";
        if (categoryName.Contains("Từ vựng")) return "fa-spell-check";
        if (categoryName.Contains("Luyện nghe")) return "fa-headphones";
        return "fa-book";
    }

    public string GetCategoryTag(string categoryName)
    {
        if (categoryName.Contains("Giao tiếp")) return "Giao tiếp";
        if (categoryName.Contains("Ngữ pháp")) return "Ngữ pháp";
        if (categoryName.Contains("Từ vựng")) return "Từ vựng";
        if (categoryName.Contains("Luyện nghe")) return "Luyện nghe";
        return "Tổng hợp";
    }
}

<script>
    // Xử lý sắp xếp nếu cần
    document.querySelectorAll('[data-sort]').forEach(item => {
        item.addEventListener('click', function (e) {
            e.preventDefault();
            const sortType = this.getAttribute('data-sort');
            // Thêm logic sắp xếp tại đây
            console.log('Sắp xếp theo:', sortType);
        });
    });
</script>