@model EnglishStudySystem.Areas.Admin.ViewModel.CategoryDetailsWithLessonsViewModel

@{
    ViewBag.Title = "Chi tiết Danh mục";
    // Xác định trạng thái ban đầu: nếu danh mục bị xóa thì hiển thị bài học đã xóa
    var initialShowDeletedLessons = Model.IsDeleted;
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white mb-0" style="background: linear-gradient(135deg, #2c3e50, #3498db); padding: 10px 20px; border-radius: 8px;">
            <i class="fas fa-folder-open me-2"></i>@ViewBag.Title
        </h2>
        <div>
            @if (ViewBag.CanEdit)
            {
                if (Model.IsDeleted)
                {
                    @Html.ActionLink("Quay lại Danh sách đã xóa", "DeletedIndex", null, new { @class = "btn btn-dark" })
                }
                else
                {
                    @Html.ActionLink("Chỉnh sửa", "Edit", new { id = Model.Id }, new { @class = "btn btn-warning me-2" })
                    @Html.ActionLink("Quay lại Danh sách", "Index", null, new { @class = "btn btn-primary" })
                }
            }
        </div>
    </div>

    <div class="card shadow-sm mb-4" style="border: none; border-radius: 10px; overflow: hidden;">
        <div class="card-header text-white py-3" style="background: linear-gradient(135deg, #3498db, #2ecc71);">
            <h4 class="mb-0">
                <i class="fas fa-info-circle me-2"></i>Thông tin chi tiết
            </h4>
        </div>
        <div class="card-body" style="background-color: #f8f9fa;">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="info-item mb-3 p-3 bg-white rounded shadow-sm">
                        <h5 class="mb-2" style="color: #3498db;"><i class="fas fa-tag me-2"></i>Tên danh mục</h5>
                        <p class="fs-5">@Model.Name</p>
                    </div>

                    <div class="info-item mb-3 p-3 bg-white rounded shadow-sm">
                        <h5 class="mb-2" style="color: #3498db;"><i class="fas fa-dollar-sign me-2"></i>Giá</h5>
                        <p class="fs-5" style="color: #27ae60; font-weight: bold;">
                            @* Định dạng giá tiền thành USD dạng số nguyên *@
                            @if (Model.Price.HasValue && Model.Price > 0)
                            {
                                @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C0}", Model.Price.Value)
                            }
                            else
                            {
                                <text>Free</text>
                            }
                        </p>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="info-item mb-3 p-3 bg-white rounded shadow-sm">
                        <h5 class="mb-2" style="color: #3498db;"><i class="fas fa-align-left me-2"></i>Mô tả</h5>
                        <p class="fs-5">@(string.IsNullOrEmpty(Model.Description) ? "Không có mô tả" : Model.Description)</p>
                    </div>

                    <div class="info-item mb-3 p-3 bg-white rounded shadow-sm">
                        <h5 class="mb-2" style="color: #3498db;"><i class="fas fa-trash-alt me-2"></i>Trạng thái</h5>
                        <span class="badge" style="background-color: @(Model.IsDeleted ? "#e74c3c" : "#2ecc71");">
                            @(Model.IsDeleted ? "Đã xóa" : "Đang hoạt động")
                        </span>
                        @if (Model.IsDeleted)
                        {
                            @* Hiển thị ngày và giờ xóa *@
                            <p class="text-muted small mt-1">Ngày xóa: @Model.DeletedAt?.ToString("dd/MM/yyyy HH:mm")</p>
                        }
                    </div>
                </div>
            </div>

            <hr style="border-top: 1px solid #ddd; opacity: 0.2;" />

            <div class="row">
                <div class="col-md-6">
                    <div class="p-3 bg-white rounded shadow-sm">
                        <h5 style="color: #3498db;"><i class="fas fa-user-plus me-2"></i>Thông tin tạo</h5>
                        <div class="info-item mb-2">
                            <span class="text-muted">Người tạo:</span>
                            @* Hiển thị FullName của người tạo (giả định có thuộc tính trong ViewModel) *@
                            <span class="fw-bold">
                                @(string.IsNullOrEmpty(Model.CreatedByUserFullName) ? "N/A" : Model.CreatedByUserFullName)
                            </span>
                            @* Hiển thị vai trò của người tạo (giả định có thuộc tính trong ViewModel) *@
                            @if (!string.IsNullOrEmpty(Model.CreatedByUserRole))
                            {
                                <span class="badge" style="background-color: #3498db;">@Model.CreatedByUserRole</span>
                            }
                        </div>
                        <div class="info-item mb-2">
                            <span class="text-muted">Ngày tạo:</span>
                            @* Hiển thị ngày và giờ tạo *@
                            <span class="fw-bold">@Model.CreatedDate.ToString("dd/MM/yyyy HH:mm:ss")</span>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.UpdatedByUserId))
                {
                    <div class="col-md-6">
                        <div class="p-3 bg-white rounded shadow-sm">
                            <h5 style="color: #3498db;"><i class="fas fa-user-edit me-2"></i>Thông tin cập nhật</h5>
                            <div class="info-item mb-2">
                                <span class="text-muted">Người cập nhật:</span>
                                @* Hiển thị FullName của người cập nhật (giả định có thuộc tính trong ViewModel) *@
                                <span class="fw-bold">
                                    @(string.IsNullOrEmpty(Model.UpdatedByUserFullName) ? "N/A" : Model.UpdatedByUserFullName)
                                </span>
                                @* Hiển thị vai trò của người cập nhật (giả định có thuộc tính trong ViewModel) *@
                                @if (!string.IsNullOrEmpty(Model.UpdatedByUserRole))
                                {
                                    <span class="badge" style="background-color: #3498db;">@Model.UpdatedByUserRole</span>
                                }
                            </div>
                            <div class="info-item mb-2">
                                <span class="text-muted">Ngày cập nhật:</span>
                                @* Hiển thị ngày và giờ cập nhật *@
                                <span class="fw-bold">
                                    @Model.UpdatedDate.Value.ToString("dd/MM/yyyy HH:mm:ss")
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="card shadow-sm" style="border: none; border-radius: 10px; overflow: hidden;">
        <div class="card-header text-white py-3" style="background: linear-gradient(135deg, #3498db, #2ecc71);">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0">
                    <i class="fas fa-book me-2"></i><span id="lessonListHeader"></span> (@Model.Name)
                </h4>
                <div id="lessonListActions">
                    @* Các nút sẽ được thêm/xóa bằng JavaScript *@
                </div>
            </div>
        </div>
        <div class="card-body p-0" style="background-color: #f8f9fa;">
            <div id="lessonsListContainer">
                @* Partial View sẽ được tải vào đây bằng AJAX ngay khi trang load. *@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> @* THÊM DÒNG NÀY *@

    <script>
        $(document).ready(function () {
            // Hàm để tải Partial View
            function loadLessonsPartial(showDeleted) {
                var categoryId = @Model.Id;
                // Đảm bảo URL này gọi đến Action "GetLessonsPartial" trong "CategoriesController"
                // và nằm trong Area "Admin"
                var url = '@Url.Action("GetLessonsPartial", "Categories", new { area = "Admin" })';

                $.ajax({
                    url: url,
                    type: 'GET',
                    data: { categoryId: categoryId, showDeleted: showDeleted },
                    success: function (data) {
                        $('#lessonsListContainer').html(data);
                        updateLessonListHeader(showDeleted);
                        updateLessonListActions(showDeleted);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error loading lessons partial:", error);
                        $('#lessonsListContainer').html('<div class="p-4 text-center text-danger">Không thể tải danh sách bài học. Vui lòng thử lại sau.</div>');
                    }
                });
            }

            // Hàm cập nhật tiêu đề danh sách bài học
            function updateLessonListHeader(showDeleted) {
                if (showDeleted) {
                    $('#lessonListHeader').text('Danh sách Bài học đã xóa');
                } else {
                    $('#lessonListHeader').text('Danh sách Bài học');
                }
            }

            // Hàm cập nhật các nút hành động trên header của danh sách bài học
            function updateLessonListActions(showDeleted) {
                var actionsHtml = '';
                var categoryId = @Model.Id;
                var isCategoryDeleted = @Model.IsDeleted.ToString().ToLower(); // Chuyển đổi C# bool sang JS bool

                if (showDeleted) {
                    actionsHtml += '<button type="button" class="btn btn-primary btn-sm me-2" id="btnShowActiveLessons"><i class="fas fa-list me-1"></i> Danh sách Bài học</button>';
                } else {
                    // Chỉ hiển thị nút "Thêm mới Bài học" nếu danh mục không bị xóa
                    if (!isCategoryDeleted) {
                        actionsHtml += '<a href="@Url.Action("Create", "Lessons", new { area = "Admin", categoryId = Model.Id })" class="btn btn-success btn-sm me-2"><i class="fas fa-plus me-1"></i> Thêm mới Bài học</a>';
                    }
                    actionsHtml += '<button type="button" class="btn btn-dark btn-sm" id="btnShowDeletedLessons"><i class="fas fa-trash-alt me-1"></i> Bài học đã xóa</button>';
                }
                $('#lessonListActions').html(actionsHtml);

                // Gắn lại sự kiện cho các nút mới
                $('#btnShowActiveLessons').off('click').on('click', function () {
                    loadLessonsPartial(false);
                });
                $('#btnShowDeletedLessons').off('click').on('click', function () {
                    loadLessonsPartial(true);
                });
            }

            // Tải danh sách bài học ban đầu khi trang load
            // Nếu danh mục bị xóa, mặc định hiển thị bài học đã xóa
            // Giá trị của initialShowDeletedLessons được lấy từ Model.IsDeleted ở phía Razor.
            loadLessonsPartial(@initialShowDeletedLessons.ToString().ToLower());

            // --------------------------------------------------------------------------------------
            // ĐOẠN JAVASCRIPT XỬ LÝ CÁC NÚT HÀNH ĐỘNG CỦA LESSON
            // Nó sẽ lắng nghe sự kiện trên toàn bộ document, đảm bảo hoạt động với các phần tử mới tải
            // --------------------------------------------------------------------------------------

            $(document).on('click', '.btn-lesson-action-ajax', function (e) {
                e.preventDefault(); // Ngăn chặn hành vi mặc định của form/link

                var button = $(this);
                var lessonId = button.data('id');
                var actionUrl = button.data('action-url');
                var confirmMessage = button.data('confirm-message');
                var successTitle = button.data('success-title') || 'Thành công!'; // Tiêu đề mặc định
                var errorTitle = button.data('error-title') || 'Thất bại!'; // Tiêu đề mặc định
                var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val(); // Lấy token từ trang chính

                Swal.fire({
                    title: 'Bạn có chắc chắn?',
                    text: confirmMessage,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Đồng ý',
                    cancelButtonText: 'Hủy bỏ'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: actionUrl,
                            type: 'POST',
                            data: {
                                id: lessonId,
                                __RequestVerificationToken: antiForgeryToken
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        successTitle,
                                        response.message,
                                        'success'
                                    );
                                    // Sau khi thao tác thành công, tải lại Partial View với trạng thái hiện tại
                                    var currentShowDeleted = $('#lessonListHeader').text().includes('đã xóa');
                                    loadLessonsPartial(currentShowDeleted);
                                } else {
                                    Swal.fire(
                                        errorTitle,
                                        response.message,
                                        'error'
                                    );
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error("Lỗi AJAX:", xhr.responseText);
                                Swal.fire(
                                    'Lỗi!',
                                    'Có lỗi xảy ra trong quá trình xử lý: ' + xhr.responseText,
                                    'error'
                                );
                            }
                        });
                    }
                });
            });

            // --------------------------------------------------------------------------------------
            // KẾT THÚC ĐOẠN JAVASCRIPT ĐƯỢC THÊM VÀO
            // --------------------------------------------------------------------------------------

        });
    </script>
}

@section Styles {
    @* Thêm link SweetAlert2 CSS nếu bạn muốn tùy chỉnh sâu hơn, hoặc nó thường được đi kèm với JS *@
    @* <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"> *@

    <style>
        .card {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .info-item h5 {
            font-size: 0.9rem;
            text-transform: uppercase;
        }

        .info-item p {
            margin-bottom: 0;
            padding-left: 26px;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
            color: white;
        }

        .btn-primary {
            background-color: #3498db;
            border-color: #3498db;
        }

        .btn-warning {
            background-color: #f39c12;
            border-color: #f39c12;
            color: white;
        }

        .btn-dark {
            background-color: #2c3e50;
            border-color: #2c3e50;
        }

        .btn-success {
            background-color: #2ecc71;
            border-color: #2ecc71;
        }

        .btn-info {
            background-color: #3498db;
            border-color: #3498db;
        }

        .btn-danger {
            background-color: #e74c3c;
            border-color: #e74c3c;
        }

        .table th {
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

            .table tbody tr:hover {
                background-color: rgba(52, 152, 219, 0.1) !important;
            }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    </style>
}