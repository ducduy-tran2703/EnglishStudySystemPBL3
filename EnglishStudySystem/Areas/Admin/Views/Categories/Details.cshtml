@model EnglishStudySystem.Areas.Admin.ViewModel.CategoryDetailsWithLessonsViewModel 


@{
    ViewBag.Title = "Chi tiết Danh mục & Bài học"; 
}

<h2>@ViewBag.Title</h2>

@* --- Phần hiển thị chi tiết Danh mục (Sử dụng ViewModel properties) --- *@
<div>
    <h4>Thông tin Danh mục</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd>
            @String.Format("{0:C}", Model.Price)
        </dd>

        @* Hiển thị trạng thái xóa mềm và thời gian xóa (nếu có) *@
        <dt>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>

        @if (Model.IsDeleted)
        {
            <dt>
                @Html.DisplayNameFor(model => model.DeletedAt)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DeletedAt)
            </dd>
        }

        @* Hiển thị thông tin audit fields *@
        <dt>
            @Html.DisplayNameFor(model => model.CreatedByUserId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedByUserId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedByUserRole)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedByUserRole)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        @if (!string.IsNullOrEmpty(Model.UpdatedByUserId))
        {
            <dt>
                @Html.DisplayNameFor(model => model.UpdatedByUserId)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UpdatedByUserId)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UpdatedByUserRole)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UpdatedByUserRole)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UpdatedDate)
            </dd>
        }
    </dl>
</div>
@* --- Kết thúc phần chi tiết Danh mục --- *@

<hr />

@* --- Phần hiển thị danh sách Bài học --- *@
<h3>Danh sách Bài học (@Model.Name)</h3>

<p>
    @* Liên kết đến trang thêm mới Bài học cho danh mục này *@
    @Html.ActionLink("Thêm mới Bài học", "Create", "Lessons", new { categoryId = Model.Id }, new { @class = "btn btn-primary" })
</p>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Lessons.FirstOrDefault().Title) @* Lấy tên thuộc tính từ Model Lesson *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lessons.FirstOrDefault().Description) @* Lấy tên thuộc tính từ Model Lesson *@
            </th>
            @* Thêm các cột khác của Bài học nếu muốn hiển thị *@
            <th></th> @* Cột cho các hành động quản lý Bài học *@
        </tr>
    </thead>
    <tbody>
        @if (Model.Lessons != null && Model.Lessons.Any()) 
        {
            foreach (var lesson in Model.Lessons.OrderBy(l => l.CreatedDate))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => lesson.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => lesson.Description)
                    </td>
                    @* Hiển thị các thuộc tính khác của Bài học *@
                    <td>
                        @* Các liên kết quản lý Bài học *@
                        @Html.ActionLink("Chi tiết", "Details", "Lessons", new { id = lesson.Id }, new { @class = "btn btn-info btn-sm" }) |
                        @Html.ActionLink("Chỉnh sửa", "Edit", "Lessons", new { id = lesson.Id }, new { @class = "btn btn-warning btn-sm" }) |
                        @* Thêm Form Xóa mềm Bài học (tương tự Category Index) *@
                        @using (Html.BeginForm("SoftDelete", "Lessons", new { id = lesson.Id }, FormMethod.Post, new { @style = "display:inline;" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Bạn có chắc chắn muốn xóa mềm bài học này?');">Xóa mềm</button>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3">Chưa có bài học nào trong danh mục này.</td> @* Colspan bằng số cột trong table *@
            </tr>
        }
    </tbody>
</table>
@* --- Kết thúc phần danh sách Bài học --- *@


<p>
    @* Liên kết trở lại trang danh sách Danh mục *@
    @if (Model.IsDeleted)
    {
        @Html.ActionLink("Quay lại Danh sách Danh mục đã xóa", "DeletedIndex", "Categories")
    }
    else
    {
        @Html.ActionLink("Chỉnh sửa Danh mục", "Edit", new { id = Model.Id }, new { @class = "btn btn-warning" }) @* Liên kết sửa Danh mục *@
        @Html.ActionLink("Quay lại Danh sách Danh mục", "Index", "Categories")
    }
</p>