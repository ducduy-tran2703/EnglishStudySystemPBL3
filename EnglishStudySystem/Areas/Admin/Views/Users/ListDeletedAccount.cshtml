@model IEnumerable<EnglishStudySystem.Models.UserViewModel>

@{
    ViewBag.Title = "Quản lý Người dùng";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayoutPage.cshtml";
}

<div class="container-fluid px-4">
    <div class="card border-0 shadow-lg rounded-lg overflow-hidden">
        <!-- Card Header with Gradient Background -->
        <div class="card-header bg-gradient-success text-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-0 font-weight-bold" style="color:White">
                        <i class="fas fa-users-cog mr-2" style="color:whitesmoke"></i>@ViewBag.Title
                    </h4>
                    <small class="font-weight-light">Quản lý tài khoản bị xóa</small>
                </div>
                @Html.ActionLink("Quay lại Danh sách", "ListUser", "Users", new { area = "Admin" }, new { @class = "btn btn-light btn-sm text-success font-weight-bold shadow-sm" })
            </div>

        </div>

        <div class="card-body p-0">
            <!-- Search and Filter Section -->
            <div class="p-4 border-bottom">
                <div class="row">
                    <div class="col-md-8">
                        <div class="input-group rounded-pill shadow-sm">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white border-0 ps-3">
                                    <i class="fas fa-search text-muted"></i>
                                </span>
                            </div>
                            <input type="text" id="userSearch" class="form-control border-0 py-2"
                                   placeholder="Tìm kiếm theo tên, email...">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary border-0" type="button" id="clearSearch">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <!-- Role Tabs with Icons -->
            <ul class="nav nav-tabs nav-justified border-bottom-0 px-4 pt-3" id="userTabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link d-flex flex-column align-items-center" id="editor-tab" data-toggle="tab" href="#editor" role="tab">
                        <i class="fas fa-user-edit fa-lg mb-1"></i>
                        <span>Editor</span>
                        <small class="badge badge-pill badge-light mt-1">@Model.Count(u => u.Roles.Contains("Editor"))</small>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link d-flex flex-column align-items-center" id="customer-tab" data-toggle="tab" href="#customer" role="tab">
                        <i class="fas fa-user fa-lg mb-1"></i>
                        <span>Customer</span>
                        <small class="badge badge-pill badge-light mt-1">@Model.Count(u => u.Roles.Contains("Customer"))</small>
                    </a>
                </li>
            </ul>

            <!-- Tab Content -->
            <div class="tab-content p-4" id="userTabsContent">
                <!-- Admin Tab -->
                <div class="tab-pane fade show active" id="admin" role="tabpanel">
                    <div class="table-responsive rounded-lg shadow-sm">
                        <table class="table table-hover mb-0">
                            <thead class="thead-light">
                                <tr>
                                    <th style="width: 20%" class="border-top-0">Tên đăng nhập</th>
                                    <th style="width: 25%" class="border-top-0">Email</th>
                                    <th style="width: 25%" class="border-top-0">Họ tên</th>
                                    <th style="width: 15%" class="border-top-0">Trạng thái</th>
                                    <th style="width: 15%" class="border-top-0 text-center">Thao tác</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>

                <!-- Editor Tab -->
                <div class="tab-pane fade" id="editor" role="tabpanel">
                    <div class="table-responsive rounded-lg shadow-sm">
                        <table class="table table-hover mb-0">
                            <thead class="thead-light">
                                <tr>
                                    <th style="width: 20%" class="border-top-0">Tên đăng nhập</th>
                                    <th style="width: 25%" class="border-top-0">Email</th>
                                    <th style="width: 25%" class="border-top-0">Họ tên</th>
                                    <th style="width: 15%" class="border-top-0">Trạng thái</th>
                                    <th style="width: 15%" class="border-top-0 text-center">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Where(u => u.Roles.Contains("Editor")))
                                {
                                    <tr class="user-row" data-status="@(item.IsActive ? "active" : "inactive")">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-sm bg-gradient-warning text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                    @item.UserName.Substring(0, 1).ToUpper()
                                                </div>
                                                <span class="font-weight-bold">@item.UserName</span>
                                            </div>
                                        </td>
                                        <td>@item.Email</td>
                                        <td>@item.FullName</td>
                                        <td>
                                            <span class="badge @(item.IsActive ? "badge-success-light" : "badge-secondary-light") p-2 rounded-pill">
                                                @(item.IsActive ? "Hoạt động" : "Không hoạt động")
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm shadow" role="group">
                                                <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-light" title="Chi tiết">
                                                    <i class="fas fa-info-circle text-info"></i>
                                                </a>
                                                <a href="@Url.Action("Revive", new { id = item.Id })" class="btn btn-light btn-delete" title="Khôi phục">
                                                    <i class="fas fa-undo text-success"></i>
                                                </a>
                                                <a href="@Url.Action("DeletePermanent", new { id = item.Id })" class="btn btn-light btn-delete" title="Xóa vĩnh viễn">
                                                    <i class="fas fa-trash-alt text-danger"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Customer Tab -->
                <div class="tab-pane fade" id="customer" role="tabpanel">
                    <div class="table-responsive rounded-lg shadow-sm">
                        <table class="table table-hover mb-0">
                            <thead class="thead-light">
                                <tr>
                                    <th style="width: 20%" class="border-top-0">Tên đăng nhập</th>
                                    <th style="width: 25%" class="border-top-0">Email</th>
                                    <th style="width: 25%" class="border-top-0">Họ tên</th>
                                    <th style="width: 15%" class="border-top-0">Trạng thái</th>
                                    <th style="width: 15%" class="border-top-0 text-center">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Where(u => u.Roles.Contains("Customer")))
                                {
                                    <tr class="user-row" data-status="@(item.IsActive ? "active" : "inactive")">
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-sm bg-gradient-info text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                    @item.UserName.Substring(0, 1).ToUpper()
                                                </div>
                                                <span class="font-weight-bold">@item.UserName</span>
                                            </div>
                                        </td>
                                        <td>@item.Email</td>
                                        <td>@item.FullName</td>
                                        <td>
                                            <span class="badge @(item.IsActive ? "badge-success-light" : "badge-secondary-light") p-2 rounded-pill">
                                                @(item.IsActive ? "Hoạt động" : "Không hoạt động")
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            <div class="btn-group btn-group-sm shadow" role="group">
                                                <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-light" title="Chi tiết">
                                                    <i class="fas fa-info-circle text-info"></i>
                                                </a>
                                                <a href="@Url.Action("Revive", new { id = item.Id })" class="btn btn-light btn-delete" title="Khôi phục">
                                                    <i class="fas fa-undo text-success"></i>

                                                </a>
                                                <a href="@Url.Action("DeletePermanent", new { id = item.Id })" class="btn btn-light btn-delete" title="Xóa vĩnh viễn">
                                                    <i class="fas fa-trash-alt text-danger"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Empty State -->
            <div class="text-center py-5 empty-state d-none">
                <div class="py-5">
                    <i class="fas fa-user-slash fa-4x text-muted mb-4"></i>
                    <h4 class="text-muted font-weight-light">Không tìm thấy người dùng phù hợp</h4>
                    <p class="text-muted mb-4">Thử thay đổi từ khóa tìm kiếm hoặc tiêu chí lọc</p>
                    <button class="btn btn-outline-success" onclick="resetFilters()">
                        <i class="fas fa-redo mr-2"></i>Đặt lại bộ lọc
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Initialize tooltips
            $('[title]').tooltip({
                placement: 'top',
                trigger: 'hover'
            });

            // Tab functionality
            $('#userTabs a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
                updateEmptyState();
            });

            // Search functionality with debounce
            let searchTimeout;
            $('#userSearch').on('keyup', function () {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(filterUsers, 300);
            });

            // Clear search button
            $('#clearSearch').on('click', function () {
                $('#userSearch').val('');
                filterUsers();
            });

            // Filter functionality
            $('.filter-option').on('click', function (e) {
                e.preventDefault();
                $('.filter-option').removeClass('active');
                $(this).addClass('active');
                filterUsers($(this).data('filter'));
            });

            function filterUsers(statusFilter = 'all') {
                const searchTerm = $('#userSearch').val().toLowerCase();
                const activeTab = $('.tab-pane.active');
                let visibleRows = 0;

                activeTab.find('.user-row').each(function () {
                    const row = $(this);
                    const userName = row.find('td:eq(0)').text().toLowerCase();
                    const email = row.find('td:eq(1)').text().toLowerCase();
                    const fullName = row.find('td:eq(2)').text().toLowerCase();
                    const rowStatus = row.data('status');

                    const matchesSearch = searchTerm === '' ||
                        userName.includes(searchTerm) ||
                        email.includes(searchTerm) ||
                        fullName.includes(searchTerm);

                    const matchesFilter = statusFilter === 'all' || rowStatus === statusFilter;

                    if (matchesSearch && matchesFilter) {
                        row.show();
                        visibleRows++;
                    } else {
                        row.hide();
                    }
                });

                updateEmptyState(visibleRows);

                // Show/hide clear button based on search input
                if ($('#userSearch').val().trim() !== '') {
                    $('#clearSearch').show();
                } else {
                    $('#clearSearch').hide();
                }
            }

            function updateEmptyState(visibleRows) {
                const activeTab = $('.tab-pane.active');
                const totalRows = activeTab.find('.user-row').length;
                const emptyState = $('.empty-state');

                if (typeof visibleRows === 'undefined') {
                    visibleRows = activeTab.find('.user-row:visible').length;
                }

                if (visibleRows === 0 && totalRows > 0) {
                    emptyState.removeClass('d-none');
                    activeTab.find('table').addClass('d-none');
                } else {
                    emptyState.addClass('d-none');
                    activeTab.find('table').removeClass('d-none');
                }
            }

            function resetFilters() {
                $('#userSearch').val('').trigger('keyup');
                $('.filter-option').removeClass('active');
                $('.filter-option[data-filter="all"]').addClass('active');
                filterUsers();
            }

            // Initialize
            updateEmptyState();
            $('#clearSearch').hide(); // Hide clear button initially
        });
    </script>
}

<style>
    /* Custom CSS for enhanced appearance */
    .card {
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .form-control {
        flex: 1;
        width: 100%;
        max-width: 800px;
        border-radius: 100px;
    }

    .card-header {
        border-bottom: none;
    }

    .bg-gradient-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .bg-gradient-primary {
        background: linear-gradient(135deg, #007bff 0%, #3d8bfd 100%);
    }

    .bg-gradient-warning {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
    }

    .bg-gradient-info {
        background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);
    }

    .avatar-sm {
        width: 32px;
        height: 32px;
        font-size: 14px;
        font-weight: 600;
    }

    .nav-tabs {
        border-bottom: none;
    }

        .nav-tabs .nav-link {
            border: none;
            color: #6c757d;
            font-weight: 500;
            padding: 1rem 0.5rem;
            transition: all 0.3s;
            position: relative;
            background: transparent;
        }

            .nav-tabs .nav-link.active {
                color: #28a745;
                background: transparent;
            }

                .nav-tabs .nav-link.active:after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 50%;
                    transform: translateX(-50%);
                    width: 40px;
                    height: 3px;
                    background: #28a745;
                    border-radius: 3px;
                }

            .nav-tabs .nav-link:hover:not(.active) {
                color: #28a745;
                background: rgba(40, 167, 69, 0.05);
            }

    .badge-success-light {
        background-color: rgba(40, 167, 69, 0.1);
        color: #28a745;
    }

    .badge-secondary-light {
        background-color: rgba(108, 117, 125, 0.1);
        color: #6c757d;
    }

    .table thead th {
        border-bottom: 1px solid #e9ecef;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
        color: #6c757d;
    }

    .table td {
        vertical-align: middle;
        border-top: 1px solid #f8f9fa;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }

    .btn-light {
        background-color: #f8f9fa;
        border-color: #f8f9fa;
    }

    .empty-state {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        margin: 1rem;
    }

    .rounded-pill {
        border-radius: 50rem !important;
    }

    .shadow-sm {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
    }

    .dropdown-menu {
        border: none;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
    }

    .dropdown-item {
        padding: 0.5rem 1.5rem;
    }

        .dropdown-item.active {
            background-color: rgba(40, 167, 69, 0.1);
            color: #28a745;
        }

    .dropdown-divider {
        border-color: #f8f9fa;
    }

    .dropdown-header {
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        color: #6c757d;
        font-weight: 600;
    }

    /* Clear search button style */
    #clearSearch {
        display: none;
        transition: all 0.3s;
    }

        #clearSearch:hover {
            color: #dc3545 !important;
        }
</style>